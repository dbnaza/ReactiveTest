apply plugin: "com.android.library"

project.ext.react = [
        bundleInDebug   : true,
        jsBundleDirDebug: "$buildDir/intermediates/bundles/debug/assets",
        jsBundleDirRelease: "$buildDir/intermediates/bundles/release/assets"
]


apply from: "../../node_modules/react-native/react.gradle"
apply plugin: 'maven-publish'

/**
 * Set this to true to create two separate APKs instead of one:
 *   - An APK that only works on ARM devices
 *   - An APK that only works on x86 devices
 * The advantage is the size of the APK is reduced by about 4MB.
 * Upload all the APKs to the Play Store and people will download
 * the correct one based on the CPU architecture of their device.
 */
def enableSeparateBuildPerCPUArchitecture = false

/**
 * Run Proguard to shrink the Java bytecode in release builds.
 */
def enableProguardInReleaseBuilds = false

android {
  compileSdkVersion 28
  buildToolsVersion '27.0.3'

  defaultConfig {
    minSdkVersion 16
    targetSdkVersion 28
    versionCode 1
    versionName "1.0"
    ndk {
      abiFilters "armeabi-v7a", "x86"
    }
  }
  splits {
    abi {
      reset()
      enable enableSeparateBuildPerCPUArchitecture
      universalApk false  // If true, also generate a universal APK
      include "armeabi-v7a", "x86"
    }
  }

  android {
    lintOptions {
      abortOnError false
    }
  }
}

dependencies {
  //implementation 'com.android.support:appcompat-v7:28.0.0'
  implementation 'com.facebook.react:react-native:+'
}

task sourceJar(type: Jar) {
  from android.sourceSets.main.java.srcDirs
  classifier "source"
}

publishing {
  publications {
    bar(MavenPublication) {
      groupId 'com.lib'
      artifactId 'ReactNativeTestLib'
      version '0.9'
      artifact(sourceJar)
      artifact("$buildDir/outputs/aar/lib-debug.aar")
    }
  }
  repositories {
    mavenLocal()
  }
}
